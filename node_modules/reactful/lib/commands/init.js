"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.init = void 0;
var path_1 = __importDefault(require("path"));
var fs_1 = __importDefault(require("fs"));
var child_process_1 = require("child_process");
var scripts = {
    default: function (_a) {
        var pmCommand = _a.pmCommand, appName = _a.appName;
        return ({
            'eslint': 'eslint "src/**/*.js"',
            'start': "concurrently \"" + pmCommand + " run dev:server\" \"" + pmCommand + " run dev:bundler\"",
            'dev:server': 'cross-env NODE_PATH=./src nodemon --exec "babel-node src/server/server.js" --ignore .reactful.json --ignore public/',
            'dev:bundler': 'webpack -w --mode=development',
            'build:react': 'cross-env NODE_ENV=production webpack --progress --mode=production',
            'build:node': 'babel src -d build --config-file ./babel-node.config.js --copy-files',
            'build:all': pmCommand + " install && " + pmCommand + " run build:react && " + pmCommand + " run build:node",
            'prod:start': "cross-env NODE_ENV=production NODE_PATH=./build pm2 start -i max build/server/server.js --update-env --name " + appName + "Prod",
            'prod:stop': "pm2 stop " + appName + "Prod",
            'prod:reload': "pm2 reload --update-env " + appName + "Prod",
            'prod:logs': "pm2 logs --update-env " + appName + "Prod",
        });
    },
    typescript: function (_a) {
        var pmCommand = _a.pmCommand, appName = _a.appName;
        return ({
            'eslint': 'eslint "src/**/*.{js,jsx,ts,tsx}"',
            'start': "concurrently \"" + pmCommand + " run dev:server\" \"" + pmCommand + " run dev:bundler\"",
            'dev:server': 'cross-env NODE_PATH=./src tsnd --respawn src/server/server.ts --ignore-watch node_modules,public',
            'dev:bundler': 'webpack -w --mode=development --env=dev',
            'build:webpack': 'cross-env NODE_ENV=production webpack --mode=production --env=prod',
            'build:files': 'copyfiles -u 1 -e "src/**/*.ts" -e "src/**/*.tsx" -e "src/**/*.js" "src/**/*" build/',
            'build:node': 'rm -rf build && tsc --sourceMap false --skipLibCheck true',
            'build:all': pmCommand + " install && " + pmCommand + " run build:node && " + pmCommand + " run build:files && " + pmCommand + " run build:webpack",
            'prod:start': "cross-env NODE_ENV=production NODE_PATH=./build pm2 start -i max build/server/server.js --exp-backoff-restart-delay=150 --update-env --name " + appName + "Prod",
            'prod:stop': "pm2 stop " + appName + "Prod",
            'prod:reload': "pm2 reload --update-env " + appName + "Prod && " + pmCommand + " run prod:logs",
            'prod:logs': "pm2 logs --update-env " + appName + "Prod",
        });
    },
    simple: function () { return ({
        eslint: 'eslint "src/**/*.{js,jsx,ts,tsx}"',
        start: '(cd src && parcel index.html)',
    }); },
};
function init(_a) {
    var appName = _a.appName, appPath = _a.appPath, useYarn = _a.useYarn, useGit = _a.useGit, useTests = _a.useTests, template = _a.template;
    return __awaiter(this, void 0, void 0, function () {
        var pmCommand, packageJson, reactfulJson, _b, mainDeps, devDeps, installProdCmd, installDevCmd, gitInit, gitCommit;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    pmCommand = useYarn ? 'yarn' : 'npm';
                    packageJson = {
                        name: appName,
                        version: '1.0.0',
                        private: true,
                        scripts: scripts[template]({ pmCommand: pmCommand, appName: appName }),
                        jest: {
                            modulePaths: ['./src'],
                            testPathIgnorePatterns: ['/node_modules/'],
                            setupFilesAfterEnv: ['<rootDir>src/setupTests.js'],
                        },
                    };
                    fs_1.default.writeFileSync(path_1.default.resolve(appPath, '.gitignore'), 'node_modules/\npublic/bundles/\nbuild/\nsrc/dist/\ncoverage/\n.reactful.json\nyarn-error.log\n.env\n.vscode/\n.DS_Store\n');
                    if (useTests) {
                        packageJson.scripts['test'] = 'jest';
                        packageJson.scripts['verify-tests'] = 'jest --coverage';
                    }
                    fs_1.default.writeFileSync(path_1.default.resolve(appPath, 'package.json'), JSON.stringify(packageJson, null, 2));
                    if (['default', 'typescript'].includes(template)) {
                        reactfulJson = {
                            main: ['main.css', 'main.js'],
                            vendor: 'vendor.js',
                        };
                        fs_1.default.writeFileSync(path_1.default.resolve(appPath, '.reactful.json'), JSON.stringify(reactfulJson, null, 2));
                    }
                    return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(require("../../templates/" + template)); })];
                case 1:
                    _b = _c.sent(), mainDeps = _b.main, devDeps = _b.dev;
                    if (useTests) {
                        devDeps.push('babel-jest', 'jest', '@testing-library/react', '@testing-library/jest-dom', '@testing-library/user-event');
                    }
                    installProdCmd = useYarn ? 'yarn add' : 'npm install';
                    installDevCmd = useYarn ? 'yarn add --dev' : 'npm install --save-dev';
                    gitInit = useGit ? 'git init &&' : '';
                    gitCommit = useGit
                        ? '&& git add . && git commit -m "reactful init"'
                        : '';
                    child_process_1.spawnSync(gitInit + " " + installProdCmd + " " + mainDeps.join(' ') + " && " + installDevCmd + " " + devDeps.join(' ') + " " + gitCommit, {
                        shell: true,
                        stdio: 'inherit',
                        cwd: path_1.default.resolve(appPath),
                    });
                    return [2 /*return*/];
            }
        });
    });
}
exports.init = init;
