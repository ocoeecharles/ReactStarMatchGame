"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.copy = exports.commandExists = exports.openApp = exports.nameFromPath = void 0;
var path_1 = __importDefault(require("path"));
var child_process_1 = require("child_process");
var fs_jetpack_1 = require("fs-jetpack");
var prompt_sync_1 = __importDefault(require("prompt-sync"));
function nameFromPath(path) {
    return path.replace(/\/$/, '').split('/').slice(-1)[0];
}
exports.nameFromPath = nameFromPath;
var isWin = process.platform === 'win32';
var openCommand = isWin ? 'start' : 'open';
function openApp(url) {
    child_process_1.spawnSync(openCommand + " " + url, {
        shell: true,
        stdio: 'inherit',
    });
}
exports.openApp = openApp;
var where = isWin ? 'where' : 'which';
function commandExists(command) {
    var status = child_process_1.spawnSync(where + ' ' + command, {
        shell: true,
    }).status;
    return status === 0;
}
exports.commandExists = commandExists;
var prompt = prompt_sync_1.default();
function copy(_a) {
    var appPath = _a.appPath, template = _a.template;
    var templateDir = path_1.default.resolve(__dirname, '..', '..', 'templates', template);
    fs_jetpack_1.copy(templateDir, appPath, {
        overwrite: function (src, dest) {
            if (fs_jetpack_1.inspect(src.absolutePath, { checksum: 'md5' }).md5 !==
                fs_jetpack_1.inspect(dest.absolutePath, { checksum: 'md5' }).md5) {
                var answer = prompt("Replace " + src.name + "? [y|n] ");
                return answer.match(/(yes|yep|y|sure)/, 'i');
            }
            return true;
        },
    });
}
exports.copy = copy;
